# Set CMake variables to configure and trim the LLVM build.
#
# This file should be passed to CMake with `-C`, which preloads a script to
# populate the cache.
#
# We use the UNINITIALIZED type for variables to indicate "type not yet
# specified", which matches CMake's behavior when values are provided on the
# command line. Real types are assigned when the corresponding `set()` is hit
# in the LLVM build. We can grep for "UNINITIALIZED" in `CMakeCache.txt` to see
# if we defined a variable that wasn't used.
#
# The empty string in each `set()` is the docstring, which we don't bother
# matching.
#
# refs:
#    https://cmake.org/cmake/help/latest/command/set.html
#    https://cmake.org/cmake/help/latest/prop_cache/TYPE.html

# Set build type. This is a CMake built-in so we use its real type.
set(CMAKE_BUILD_TYPE Release CACHE STRING "")

# Only install the toolchain components of LLVM rather than all the libraries
# and headers.
set(LLVM_INSTALL_TOOLCHAIN_ONLY ON CACHE UNINITIALIZED "")

# Select components to build 
set(LLVM_ENABLE_PROJECTS
    clang
    clang-tools-extra
    lld
    libcxx
    libcxxabi
    compiler-rt
    libunwind
    CACHE UNINITIALIZED "")
set(LLVM_TARGETS_TO_BUILD
    AArch64
    X86
    CACHE UNINITIALIZED "")

# Try to statically link tools against the C++ standard library. This is not
# supported on Apple platforms or on non-GNU-compatible compilers (MSVC), but
# it fails benignly for those targets -- a warning is raised and the build
# output is unaffected.
set(LLVM_STATIC_LINK_CXX_STDLIB ON CACHE UNINITIALIZED "")

# Build a toolchain that will link programs against the unstable version of
# libc++ from this build. We don't want users to have to install that libc++
# alongside system libraries, so we only enable this on platforms where users
# will have the option of statically linking libc++: not Apple and not MSVC
# (see above). Effectively, this means Linux.
#
# Some approximations here:
#  * When this file is included CMake hasn't done compiler detection yet, so we
#    coarsely assume that all Windows builds are done on MSVC.
#  * We use the *host* platform to determine if the *target* will support
#    static linking of libc++, assuming the toolchain will not be used for
#    cross-compiling.
if(NOT "${CMAKE_HOST_SYSTEM_NAME}" MATCHES "^(Windows|Darwin)$")
  set(LIBCXX_ABI_UNSTABLE ON CACHE UNINITIALIZED "")
endif()

# Set a default sysroot for macOS builds. This makes it more likely a bare
# `clang` or `clang++` invocation will work without extra configuration.
if("${CMAKE_HOST_SYSTEM_NAME}" MATCHES "^(Darwin)$")
  set(DEFAULT_SYSROOT /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
      CACHE UNINITIALIZED "")
endif()

# Disable assertions
set(LIBCXX_ENABLE_ASSERTIONS OFF CACHE UNINITIALIZED "")
set(LIBCXXABI_ENABLE_ASSERTIONS OFF CACHE UNINITIALIZED "")
set(LLVM_ENABLE_ASSERTIONS OFF CACHE UNINITIALIZED "")

# Disable/remove parts of the build
set(CLANG_ENABLE_ARCMT OFF CACHE UNINITIALIZED "")
set(CLANG_INCLUDE_TESTS OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_APINOTES_TEST_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_ARCMT_TEST_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_C_ARCMT_TEST_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_C_INDEX_TEST_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_CHECK_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_DIFF_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_IMPORT_TEST_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_OFFLOAD_WRAPPER_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_SCAN_DEPS_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_CLANG_SHLIB_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_DIAGTOOL_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_LIBCLANG_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_SCAN_BUILD_BUILD OFF CACHE UNINITIALIZED "")
set(CLANG_TOOL_SCAN_VIEW_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_BUILD_UTILS OFF CACHE UNINITIALIZED "")
set(LLVM_ENABLE_BINDINGS OFF CACHE UNINITIALIZED "")
set(LLVM_ENABLE_LIBXML2 OFF CACHE UNINITIALIZED "")
set(LLVM_ENABLE_OCAMLDOC OFF CACHE UNINITIALIZED "")
set(LLVM_INCLUDE_BENCHMARKS OFF CACHE UNINITIALIZED "")
set(LLVM_INCLUDE_DOCS OFF CACHE UNINITIALIZED "")
set(LLVM_INCLUDE_EXAMPLES OFF CACHE UNINITIALIZED "")
set(LLVM_INCLUDE_GO_TESTS OFF CACHE UNINITIALIZED "")
set(LLVM_INCLUDE_TESTS OFF CACHE UNINITIALIZED "")
set(LLVM_INCLUDE_UTILS OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_BUGPOINT_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_BUGPOINT_PASSES_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_DSYMUTIL_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_GOLD_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLC_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLI_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_AS_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_BCANALYZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_C_TEST_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_CAT_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_CFI_VERIFY_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_CONFIG_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_CVTRES_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_CXXDUMP_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_CXXFILT_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_CXXMAP_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_DIFF_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_DWARFDUMP_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_ELFABI_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_EXEGESIS_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_EXTRACT_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_GO_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_GSYMUTIL_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_IFS_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_JITLINK_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_JITLISTENER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_LIBTOOL_DARWIN_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_LINK_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_LIPO_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_LTO_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_LTO2_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_MC_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_MCA_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_ML_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_MT_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_OPT_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_PDBUTIL_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_PROFDATA_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_PROFGEN_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_RC_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_READOBJ_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_REDUCE_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_RTDYLD_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_SHLIB_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_SIZE_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_SPLIT_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_STRESS_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_STRINGS_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_XRAY_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LLVM_YAML_PARSER_FUZZER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_LTO_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_OBJ2YAML_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_OPT_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_OPT_VIEWER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_REMARKS_SHLIB_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_SPLIT_FILE_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_VERIFY_USELISTORDER_BUILD OFF CACHE UNINITIALIZED "")
set(LLVM_TOOL_YAML2OBJ_BUILD OFF CACHE UNINITIALIZED "")
